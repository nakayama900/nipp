Opal.modules.observer=function(Opal){function $rb_minus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs)}var $nesting=(Opal.top,[]),nil=Opal.nil,$module=(Opal.breaker,Opal.slice,Opal.module),$truthy=Opal.truthy,$hash2=Opal.hash2,$send=Opal.send;return Opal.add_stubs(["$respond_to?","$raise","$new","$to_s","$[]=","$-","$delete","$clear","$size","$each","$send"]),function($base,$parent_nesting){var $Observable,TMP_Observable_add_observer_1,TMP_Observable_delete_observer_2,TMP_Observable_delete_observers_3,TMP_Observable_count_observers_4,TMP_Observable_changed_5,TMP_Observable_changed$q_6,TMP_Observable_notify_observers_8,self=$Observable=$module($base,"Observable"),$nesting=(self.$$proto,[self].concat($parent_nesting));Opal.defn(self,"$add_observer",TMP_Observable_add_observer_1=function(observer,func){var $a,self=this,$writer=nil;return null==self.observer_peers&&(self.observer_peers=nil),null==func&&(func="update"),$truthy(($a=self.observer_peers,null!=$a&&$a!==nil?"instance-variable":nil))||(self.observer_peers=$hash2([],{})),$truthy(observer["$respond_to?"](func))||self.$raise(Opal.const_get_relative($nesting,"NoMethodError").$new("observer does not respond to `"+func.$to_s()+"'",func.$to_s())),$writer=[observer,func],$send(self.observer_peers,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)]},TMP_Observable_add_observer_1.$$arity=-2),Opal.defn(self,"$delete_observer",TMP_Observable_delete_observer_2=function(observer){var $a,self=this;return null==self.observer_peers&&(self.observer_peers=nil),$truthy(($a=self.observer_peers,null!=$a&&$a!==nil?"instance-variable":nil))?self.observer_peers.$delete(observer):nil},TMP_Observable_delete_observer_2.$$arity=1),Opal.defn(self,"$delete_observers",TMP_Observable_delete_observers_3=function(){var $a,self=this;return null==self.observer_peers&&(self.observer_peers=nil),$truthy(($a=self.observer_peers,null!=$a&&$a!==nil?"instance-variable":nil))?self.observer_peers.$clear():nil},TMP_Observable_delete_observers_3.$$arity=0),Opal.defn(self,"$count_observers",TMP_Observable_count_observers_4=function(){var $a,self=this;return null==self.observer_peers&&(self.observer_peers=nil),$truthy(($a=self.observer_peers,null!=$a&&$a!==nil?"instance-variable":nil))?self.observer_peers.$size():0},TMP_Observable_count_observers_4.$$arity=0),Opal.defn(self,"$changed",TMP_Observable_changed_5=function(state){var self=this;return null==state&&(state=!0),self.observer_state=state},TMP_Observable_changed_5.$$arity=-1),Opal.defn(self,"$changed?",TMP_Observable_changed$q_6=function(){var $a,$b,self=this;return null==self.observer_state&&(self.observer_state=nil),$truthy($truthy(($b=self.observer_state,$a=null!=$b&&$b!==nil?"instance-variable":nil))?self.observer_state:$a)?!0:!1},TMP_Observable_changed$q_6.$$arity=0),Opal.defn(self,"$notify_observers",TMP_Observable_notify_observers_8=function(){var $b,$c,TMP_7,arg,self=this;null==self.observer_state&&(self.observer_state=nil),null==self.observer_peers&&(self.observer_peers=nil);var $args_len=arguments.length,$rest_len=$args_len-0;0>$rest_len&&($rest_len=0),arg=new Array($rest_len);for(var $arg_idx=0;$args_len>$arg_idx;$arg_idx++)arg[$arg_idx-0]=arguments[$arg_idx];return $truthy($truthy(($c=self.observer_state,$b=null!=$c&&$c!==nil?"instance-variable":nil))?self.observer_state:$b)?($truthy(($b=self.observer_peers,null!=$b&&$b!==nil?"instance-variable":nil))&&$send(self.observer_peers,"each",[],(TMP_7=function(k,v){TMP_7.$$s||this;return null==k&&(k=nil),null==v&&(v=nil),$send(k,"send",[v].concat(Opal.to_a(arg)))},TMP_7.$$s=self,TMP_7.$$arity=2,TMP_7)),self.observer_state=!1):nil},TMP_Observable_notify_observers_8.$$arity=-1)}($nesting[0],$nesting)};