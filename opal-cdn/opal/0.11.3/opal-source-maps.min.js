Opal.modules.json=function(Opal){function $rb_minus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs)}var $nesting=(Opal.top,[]),nil=Opal.nil,$module=(Opal.breaker,Opal.slice,Opal.module),$klass=Opal.klass,$send=Opal.send,$truthy=Opal.truthy,$hash2=Opal.hash2;return Opal.add_stubs(["$raise","$new","$push","$[]=","$-","$[]","$create_id","$json_create","$const_get","$attr_accessor","$create_id=","$===","$parse","$generate","$from_object","$merge","$to_json","$responds_to?","$to_io","$write","$to_s","$to_a","$strftime"]),function($base,$parent_nesting){function $parse(source){try{return JSON.parse(source)}catch(e){self.$raise(Opal.const_get_qualified(Opal.const_get_relative($nesting,"JSON"),"ParserError"),e.message)}}function to_opal(value,options){var klass,arr,hash,i,ii,k;switch(typeof value){case"string":return value;case"number":return value;case"boolean":return!!value;case"null":return nil;case"object":if(!value)return nil;if(value.$$is_array){for(arr=options.array_class.$new(),i=0,ii=value.length;ii>i;i++)arr.$push(to_opal(value[i],options));return arr}hash=options.object_class.$new();for(k in value)$hasOwn.call(value,k)&&($writer=[k,to_opal(value[k],options)],$send(hash,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)]);return options.parse||(klass=hash["$[]"](Opal.const_get_relative($nesting,"JSON").$create_id()))==nil?hash:Opal.const_get_qualified("::","Object").$const_get(klass).$json_create(hash)}}var $JSON,TMP_JSON_$$_1,TMP_JSON_parse_2,TMP_JSON_parse$B_3,TMP_JSON_load_4,TMP_JSON_from_object_5,TMP_JSON_generate_6,TMP_JSON_dump_7,self=$JSON=$module($base,"JSON"),$nesting=(self.$$proto,[self].concat($parent_nesting)),$writer=nil;!function($base,$super,$parent_nesting){function $JSONError(){}{var self=$JSONError=$klass($base,$super,"JSONError",$JSONError);self.$$proto,[self].concat($parent_nesting)}return nil}($nesting[0],Opal.const_get_relative($nesting,"StandardError"),$nesting),function($base,$super,$parent_nesting){function $ParserError(){}{var self=$ParserError=$klass($base,$super,"ParserError",$ParserError);self.$$proto,[self].concat($parent_nesting)}return nil}($nesting[0],Opal.const_get_relative($nesting,"JSONError"),$nesting);var $hasOwn=Opal.hasOwnProperty;!function(self,$parent_nesting){self.$$proto,[self].concat($parent_nesting);return self.$attr_accessor("create_id")}(Opal.get_singleton_class(self),$nesting),$writer=["json_class"],$send(self,"create_id=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)],Opal.defs(self,"$[]",TMP_JSON_$$_1=function(value,options){var self=this;return null==options&&(options=$hash2([],{})),$truthy(Opal.const_get_relative($nesting,"String")["$==="](value))?self.$parse(value,options):self.$generate(value,options)},TMP_JSON_$$_1.$$arity=-2),Opal.defs(self,"$parse",TMP_JSON_parse_2=function(source,options){var self=this;return null==options&&(options=$hash2([],{})),self.$from_object($parse(source),options.$merge($hash2(["parse"],{parse:!0})))},TMP_JSON_parse_2.$$arity=-2),Opal.defs(self,"$parse!",TMP_JSON_parse$B_3=function(source,options){var self=this;return null==options&&(options=$hash2([],{})),self.$parse(source,options)},TMP_JSON_parse$B_3.$$arity=-2),Opal.defs(self,"$load",TMP_JSON_load_4=function(source,options){var self=this;return null==options&&(options=$hash2([],{})),self.$from_object($parse(source),options)},TMP_JSON_load_4.$$arity=-2),Opal.defs(self,"$from_object",TMP_JSON_from_object_5=function(js_object,options){var $a,$writer=nil;return null==options&&(options=$hash2([],{})),$truthy($a=options["$[]"]("object_class"))?$a:($writer=["object_class",Opal.const_get_relative($nesting,"Hash")],$send(options,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)]),$truthy($a=options["$[]"]("array_class"))?$a:($writer=["array_class",Opal.const_get_relative($nesting,"Array")],$send(options,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)]),to_opal(js_object,options.$$smap)},TMP_JSON_from_object_5.$$arity=-2),Opal.defs(self,"$generate",TMP_JSON_generate_6=function(obj,options){return null==options&&(options=$hash2([],{})),obj.$to_json(options)},TMP_JSON_generate_6.$$arity=-2),Opal.defs(self,"$dump",TMP_JSON_dump_7=function(obj,io,limit){var self=this,string=nil;return null==io&&(io=nil),null==limit&&(limit=nil),string=self.$generate(obj),$truthy(io)?($truthy(io["$responds_to?"]("to_io"))&&(io=io.$to_io()),io.$write(string),io):string},TMP_JSON_dump_7.$$arity=-2)}($nesting[0],$nesting),function($base,$super,$parent_nesting){function $Object(){}{var TMP_Object_to_json_8,self=$Object=$klass($base,$super,"Object",$Object);self.$$proto,[self].concat($parent_nesting)}return Opal.defn(self,"$to_json",TMP_Object_to_json_8=function(){var self=this;return self.$to_s().$to_json()},TMP_Object_to_json_8.$$arity=0),nil&&"to_json"}($nesting[0],null,$nesting),function($base,$parent_nesting){{var $Enumerable,TMP_Enumerable_to_json_9,self=$Enumerable=$module($base,"Enumerable");self.$$proto,[self].concat($parent_nesting)}Opal.defn(self,"$to_json",TMP_Enumerable_to_json_9=function(){var self=this;return self.$to_a().$to_json()},TMP_Enumerable_to_json_9.$$arity=0)}($nesting[0],$nesting),function($base,$super,$parent_nesting){function $Array(){}{var TMP_Array_to_json_10,self=$Array=$klass($base,$super,"Array",$Array);self.$$proto,[self].concat($parent_nesting)}return Opal.defn(self,"$to_json",TMP_Array_to_json_10=function(){for(var self=this,result=[],i=0,length=self.length;length>i;i++)result.push(self[i].$to_json());return"["+result.join(", ")+"]"},TMP_Array_to_json_10.$$arity=0),nil&&"to_json"}($nesting[0],null,$nesting),function($base,$super,$parent_nesting){function $Boolean(){}{var TMP_Boolean_to_json_11,self=$Boolean=$klass($base,$super,"Boolean",$Boolean);self.$$proto,[self].concat($parent_nesting)}return Opal.defn(self,"$to_json",TMP_Boolean_to_json_11=function(){var self=this;return 1==self?"true":"false"},TMP_Boolean_to_json_11.$$arity=0),nil&&"to_json"}($nesting[0],null,$nesting),function($base,$super,$parent_nesting){function $Hash(){}{var TMP_Hash_to_json_12,self=$Hash=$klass($base,$super,"Hash",$Hash);self.$$proto,[self].concat($parent_nesting)}return Opal.defn(self,"$to_json",TMP_Hash_to_json_12=function(){for(var key,value,self=this,result=[],i=0,keys=self.$$keys,length=keys.length;length>i;i++)key=keys[i],key.$$is_string?value=self.$$smap[key]:(value=key.value,key=key.key),result.push(key.$to_s().$to_json()+":"+value.$to_json());return"{"+result.join(", ")+"}"},TMP_Hash_to_json_12.$$arity=0),nil&&"to_json"}($nesting[0],null,$nesting),function($base,$super,$parent_nesting){function $NilClass(){}{var TMP_NilClass_to_json_13,self=$NilClass=$klass($base,$super,"NilClass",$NilClass);self.$$proto,[self].concat($parent_nesting)}return Opal.defn(self,"$to_json",TMP_NilClass_to_json_13=function(){return"null"},TMP_NilClass_to_json_13.$$arity=0),nil&&"to_json"}($nesting[0],null,$nesting),function($base,$super,$parent_nesting){function $Numeric(){}{var TMP_Numeric_to_json_14,self=$Numeric=$klass($base,$super,"Numeric",$Numeric);self.$$proto,[self].concat($parent_nesting)}return Opal.defn(self,"$to_json",TMP_Numeric_to_json_14=function(){var self=this;return self.toString()},TMP_Numeric_to_json_14.$$arity=0),nil&&"to_json"}($nesting[0],null,$nesting),function($base,$super,$parent_nesting){function $String(){}{var self=$String=$klass($base,$super,"String",$String);self.$$proto,[self].concat($parent_nesting)}return Opal.alias(self,"to_json","inspect")}($nesting[0],null,$nesting),function($base,$super,$parent_nesting){function $Time(){}{var TMP_Time_to_json_15,self=$Time=$klass($base,$super,"Time",$Time);self.$$proto,[self].concat($parent_nesting)}return Opal.defn(self,"$to_json",TMP_Time_to_json_15=function(){var self=this;return self.$strftime("%FT%T%z").$to_json()},TMP_Time_to_json_15.$$arity=0),nil&&"to_json"}($nesting[0],null,$nesting),function($base,$super,$parent_nesting){function $Date(){}{var TMP_Date_to_json_16,TMP_Date_as_json_17,self=$Date=$klass($base,$super,"Date",$Date);self.$$proto,[self].concat($parent_nesting)}return Opal.defn(self,"$to_json",TMP_Date_to_json_16=function(){var self=this;return self.$to_s().$to_json()},TMP_Date_to_json_16.$$arity=0),Opal.defn(self,"$as_json",TMP_Date_as_json_17=function(){var self=this;return self.$to_s()},TMP_Date_as_json_17.$$arity=0),nil&&"as_json"}($nesting[0],null,$nesting)},Opal.modules["source_map/offset"]=function(Opal){function $rb_plus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs+rhs:lhs["$+"](rhs)}function $rb_minus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs)}var $nesting=(Opal.top,[]),nil=Opal.nil,$module=(Opal.breaker,Opal.slice,Opal.module),$klass=Opal.klass,$send=Opal.send,$truthy=Opal.truthy;return Opal.add_stubs(["$include","$first","$===","$attr_reader","$new","$+","$line","$column","$raise","$class","$-","$zero?","$=="]),function($base,$parent_nesting){var $SourceMap,self=$SourceMap=$module($base,"SourceMap"),$nesting=(self.$$proto,[self].concat($parent_nesting));!function($base,$super,$parent_nesting){function $Offset(){}var TMP_Offset_new_1,TMP_Offset_initialize_2,TMP_Offset_$_3,TMP_Offset_$lt$eq$gt_4,TMP_Offset_to_s_5,TMP_Offset_inspect_6,self=$Offset=$klass($base,$super,"Offset",$Offset),$nesting=(self.$$proto,[self].concat($parent_nesting));return self.$include(Opal.const_get_relative($nesting,"Comparable")),Opal.defs(self,"$new",TMP_Offset_new_1=function(){var args,self=this,$iter=TMP_Offset_new_1.$$p,$case=nil,$args_len=arguments.length,$rest_len=$args_len-0;0>$rest_len&&($rest_len=0),args=new Array($rest_len);for(var $arg_idx=0;$args_len>$arg_idx;$arg_idx++)args[$arg_idx-0]=arguments[$arg_idx];return $iter&&(TMP_Offset_new_1.$$p=null),function(){return $case=args.$first(),Opal.const_get_relative($nesting,"Offset")["$==="]($case)?args.$first():Opal.const_get_relative($nesting,"Array")["$==="]($case)?$send(self,Opal.find_super_dispatcher(self,"new",TMP_Offset_new_1,!1,$Offset),Opal.to_a(args.$first()),null):$send(self,Opal.find_super_dispatcher(self,"new",TMP_Offset_new_1,!1,$Offset),Opal.to_a(args),null)}()},TMP_Offset_new_1.$$arity=-1),Opal.defn(self,"$initialize",TMP_Offset_initialize_2=function(line,column){var $a,self=this;return $a=[line,column],self.line=$a[0],self.column=$a[1],$a},TMP_Offset_initialize_2.$$arity=2),self.$attr_reader("line"),self.$attr_reader("column"),Opal.defn(self,"$+",TMP_Offset_$_3=function(other){var self=this,$case=nil;return function(){return $case=other,Opal.const_get_relative($nesting,"Offset")["$==="]($case)?Opal.const_get_relative($nesting,"Offset").$new($rb_plus(self.$line(),other.$line()),$rb_plus(self.$column(),other.$column())):Opal.const_get_relative($nesting,"Integer")["$==="]($case)?Opal.const_get_relative($nesting,"Offset").$new($rb_plus(self.$line(),other),self.$column()):self.$raise(Opal.const_get_relative($nesting,"ArgumentError"),"can't convert "+other+" into "+self.$class())}()},TMP_Offset_$_3.$$arity=1),Opal.defn(self,"$<=>",TMP_Offset_$lt$eq$gt_4=function(other){var self=this,$case=nil,diff=nil;return function(){return $case=other,Opal.const_get_relative($nesting,"Offset")["$==="]($case)?(diff=$rb_minus(self.$line(),other.$line()),$truthy(diff["$zero?"]())?$rb_minus(self.$column(),other.$column()):diff):self.$raise(Opal.const_get_relative($nesting,"ArgumentError"),"can't convert "+other.$class()+" into "+self.$class())}()},TMP_Offset_$lt$eq$gt_4.$$arity=1),Opal.defn(self,"$to_s",TMP_Offset_to_s_5=function(){var self=this;return self.$column()["$=="](0)?""+self.$line():""+self.$line()+":"+self.$column()},TMP_Offset_to_s_5.$$arity=0),Opal.defn(self,"$inspect",TMP_Offset_inspect_6=function(){var self=this;return"#<"+self.$class()+" line="+self.$line()+", column="+self.$column()+">"},TMP_Offset_inspect_6.$$arity=0),nil&&"inspect"}($nesting[0],null,$nesting)}($nesting[0],$nesting)},Opal.modules["source_map/mapping"]=function(Opal){var self=Opal.top,$nesting=[],nil=Opal.nil,$module=(Opal.breaker,Opal.slice,Opal.module),$klass=Opal.klass,$truthy=Opal.truthy;return Opal.add_stubs(["$require","$line","$generated","$column","$<<","$source","$original","$name","$class","$inspect","$new"]),self.$require("source_map/offset"),function($base,$parent_nesting){var $SourceMap,self=$SourceMap=$module($base,"SourceMap"),$nesting=(self.$$proto,[self].concat($parent_nesting));!function($base,$super,$parent_nesting){function $Mapping(){}{var TMP_Mapping_to_s_1,TMP_Mapping_inspect_2,self=$Mapping=$klass($base,$super,"Mapping",$Mapping);self.$$proto,[self].concat($parent_nesting)}return Opal.defn(self,"$to_s",TMP_Mapping_to_s_1=function(){var self=this,str=nil;return str=""+self.$generated().$line()+":"+self.$generated().$column(),str["$<<"]("->"+self.$source()+"@"+self.$original().$line()+":"+self.$original().$column()),$truthy(self.$name())&&str["$<<"]("#"+self.$name()),str},TMP_Mapping_to_s_1.$$arity=0),Opal.defn(self,"$inspect",TMP_Mapping_inspect_2=function(){var self=this,str=nil;return str="#<"+self.$class()+" source="+self.$source().$inspect(),str["$<<"](" generated="+self.$generated()+", original="+self.$original()),$truthy(self.$name())&&str["$<<"](" name="+self.$name().$inspect()),str["$<<"](">"),str},TMP_Mapping_inspect_2.$$arity=0),nil&&"inspect"}($nesting[0],Opal.const_get_relative($nesting,"Struct").$new("source","generated","original","name"),$nesting)}($nesting[0],$nesting)},Opal.modules["source_map/vlq"]=function(Opal){function $rb_minus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs)}function $rb_lt(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?rhs>lhs:lhs["$<"](rhs)}function $rb_plus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs+rhs:lhs["$+"](rhs)}function $rb_gt(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs>rhs:lhs["$>"](rhs)}var $nesting=(Opal.top,[]),nil=Opal.nil,$module=(Opal.breaker,Opal.slice,Opal.module),$send=Opal.send,$range=Opal.range,$hash2=Opal.hash2,$truthy=Opal.truthy;return Opal.add_stubs(["$<<","$-","$split","$inject","$[]","$[]=","$each","$<","$+","$-@","$loop","$&","$>>","$>","$|","$join","$any?","$shift","$raise","$==","$map","$encode","$each_with_index","$decode"]),function($base,$parent_nesting){var $SourceMap,self=$SourceMap=$module($base,"SourceMap"),$nesting=(self.$$proto,[self].concat($parent_nesting));!function($base,$parent_nesting){var $VLQ,TMP_VLQ_1,TMP_VLQ_encode_4,TMP_VLQ_decode_5,TMP_VLQ_encode_mappings_8,TMP_VLQ_decode_mappings_11,self=$VLQ=$module($base,"VLQ"),$nesting=(self.$$proto,[self].concat($parent_nesting));Opal.const_set($nesting[0],"VLQ_BASE_SHIFT",5),Opal.const_set($nesting[0],"VLQ_BASE",1["$<<"](Opal.const_get_relative($nesting,"VLQ_BASE_SHIFT"))),Opal.const_set($nesting[0],"VLQ_BASE_MASK",$rb_minus(Opal.const_get_relative($nesting,"VLQ_BASE"),1)),Opal.const_set($nesting[0],"VLQ_CONTINUATION_BIT",Opal.const_get_relative($nesting,"VLQ_BASE")),Opal.const_set($nesting[0],"BASE64_DIGITS","ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".$split("")),Opal.const_set($nesting[0],"BASE64_VALUES",$send($range(0,64,!0),"inject",[$hash2([],{})],(TMP_VLQ_1=function(h,i){var $writer=(TMP_VLQ_1.$$s||this,nil);return null==h&&(h=nil),null==i&&(i=nil),$writer=[Opal.const_get_relative($nesting,"BASE64_DIGITS")["$[]"](i),i],$send(h,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)],h},TMP_VLQ_1.$$s=self,TMP_VLQ_1.$$arity=2,TMP_VLQ_1))),Opal.defs(self,"$encode",TMP_VLQ_encode_4=function(ary){var TMP_2,self=this,result=nil;return result=[],function(){var $brk=Opal.new_brk();try{return $send(ary,"each",[],(TMP_2=function(n){var TMP_3,self=TMP_2.$$s||this,vlq=nil;return null==n&&(n=nil),vlq=function(){return $truthy($rb_lt(n,0))?$rb_plus(n["$-@"]()["$<<"](1),1):n["$<<"](1)}(),function(){var $brk=Opal.new_brk();try{return $send(self,"loop",[],(TMP_3=function(){var digit=(TMP_3.$$s||this,nil);return digit=vlq["$&"](Opal.const_get_relative($nesting,"VLQ_BASE_MASK")),vlq=vlq["$>>"](Opal.const_get_relative($nesting,"VLQ_BASE_SHIFT")),$truthy($rb_gt(vlq,0))&&(digit=digit["$|"](Opal.const_get_relative($nesting,"VLQ_CONTINUATION_BIT"))),result["$<<"](Opal.const_get_relative($nesting,"BASE64_DIGITS")["$[]"](digit)),$truthy($rb_gt(vlq,0))?nil:void Opal.brk(nil,$brk)},TMP_3.$$s=self,TMP_3.$$brk=$brk,TMP_3.$$arity=0,TMP_3))}catch(err){if(err===$brk)return err.$v;throw err}}()},TMP_2.$$s=self,TMP_2.$$brk=$brk,TMP_2.$$arity=1,TMP_2))}catch(err){if(err===$brk)return err.$v;throw err}}(),result.$join()},TMP_VLQ_encode_4.$$arity=1),Opal.defs(self,"$decode",TMP_VLQ_decode_5=function(str){var self=this,result=nil,chars=nil,vlq=nil,shift=nil,continuation=nil,char$=nil,digit=nil;for(result=[],chars=str.$split("");$truthy(chars["$any?"]());){for(vlq=0,shift=0,continuation=!0;$truthy(continuation);)char$=chars.$shift(),$truthy(char$)||self.$raise(Opal.const_get_relative($nesting,"ArgumentError")),digit=Opal.const_get_relative($nesting,"BASE64_VALUES")["$[]"](char$),digit["$&"](Opal.const_get_relative($nesting,"VLQ_CONTINUATION_BIT"))["$=="](0)&&(continuation=!1),digit=digit["$&"](Opal.const_get_relative($nesting,"VLQ_BASE_MASK")),vlq=$rb_plus(vlq,digit["$<<"](shift)),shift=$rb_plus(shift,Opal.const_get_relative($nesting,"VLQ_BASE_SHIFT"));result["$<<"](function(){return vlq["$&"](1)["$=="](1)?vlq["$>>"](1)["$-@"]():vlq["$>>"](1)}())}return result},TMP_VLQ_decode_5.$$arity=1),Opal.defs(self,"$encode_mappings",TMP_VLQ_encode_mappings_8=function(ary){var TMP_6,self=this;return $send(ary,"map",[],(TMP_6=function(group){var TMP_7,self=TMP_6.$$s||this;return null==group&&(group=nil),$send(group,"map",[],(TMP_7=function(segment){var self=TMP_7.$$s||this;return null==segment&&(segment=nil),self.$encode(segment)},TMP_7.$$s=self,TMP_7.$$arity=1,TMP_7)).$join(",")},TMP_6.$$s=self,TMP_6.$$arity=1,TMP_6)).$join(";")},TMP_VLQ_encode_mappings_8.$$arity=1),Opal.defs(self,"$decode_mappings",TMP_VLQ_decode_mappings_11=function(str){var TMP_9,self=this,mappings=nil;return mappings=[],$send(str.$split(";"),"each_with_index",[],(TMP_9=function(group,index){var TMP_10,self=TMP_9.$$s||this,$writer=nil;return null==group&&(group=nil),null==index&&(index=nil),$writer=[index,[]],$send(mappings,"[]=",Opal.to_a($writer)),$writer[$rb_minus($writer.length,1)],$send(group.$split(","),"each",[],(TMP_10=function(segment){var self=TMP_10.$$s||this;return null==segment&&(segment=nil),mappings["$[]"](index)["$<<"](self.$decode(segment))},TMP_10.$$s=self,TMP_10.$$arity=1,TMP_10))},TMP_9.$$s=self,TMP_9.$$arity=2,TMP_9)),mappings},TMP_VLQ_decode_mappings_11.$$arity=1)}($nesting[0],$nesting)}($nesting[0],$nesting)},Opal.modules["source_map/map"]=function(Opal){function $rb_plus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs+rhs:lhs["$+"](rhs)}function $rb_ge(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs>=rhs:lhs["$>="](rhs)}function $rb_divide(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs/rhs:lhs["$/"](rhs)}function $rb_gt(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs>rhs:lhs["$>"](rhs)}function $rb_lt(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?rhs>lhs:lhs["$<"](rhs)}function $rb_minus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs)}var self=Opal.top,$nesting=[],nil=Opal.nil,$module=(Opal.breaker,Opal.slice,Opal.module),$klass=Opal.klass,$send=Opal.send,$truthy=Opal.truthy,$hash2=Opal.hash2;return Opal.add_stubs(["$require","$include","$from_hash","$parse","$[]","$decode_vlq_mappings","$new","$each_with_index","$decode_mappings","$+","$each","$>=","$size","$<<","$attr_reader","$to_proc","$build_vlq_string","$compact","$uniq","$map","$eql?","$is_a?","$class","$==","$mappings","$filename","$dup","$any?","$line","$generated","$last","$source","$original","$name","$empty?","$bsearch","$/","$>","$<","$-","$to_s","$sources","$names","$inspect","$protected","$group_by","$to_a","$max","$keys","$column","$encode_mappings"]),self.$require("json"),self.$require("source_map/offset"),self.$require("source_map/mapping"),self.$require("source_map/vlq"),function($base,$parent_nesting){var $SourceMap,self=$SourceMap=$module($base,"SourceMap"),$nesting=(self.$$proto,[self].concat($parent_nesting));!function($base,$super,$parent_nesting){function $Map(){}var TMP_Map_from_json_1,TMP_Map_from_hash_2,TMP_Map_decode_vlq_mappings_5,TMP_Map_initialize_6,TMP_Map_size_7,TMP_Map_$$_8,TMP_Map_each_9,TMP_Map_to_s_10,TMP_Map_sources_11,TMP_Map_names_12,TMP_Map_$eq$eq_13,TMP_Map_eql$q_14,TMP_Map_$_16,TMP_Map_$_18,TMP_Map_bsearch_19,TMP_Map_as_json_20,TMP_Map_inspect_21,TMP_Map_build_vlq_string_25,self=$Map=$klass($base,$super,"Map",$Map),def=self.$$proto,$nesting=[self].concat($parent_nesting);return def.mappings=def.string=def.sources=def.names=nil,self.$include(Opal.const_get_relative($nesting,"Enumerable")),Opal.defs(self,"$from_json",TMP_Map_from_json_1=function(json){var self=this;return self.$from_hash(Opal.const_get_relative($nesting,"JSON").$parse(json))},TMP_Map_from_json_1.$$arity=1),Opal.defs(self,"$from_hash",TMP_Map_from_hash_2=function(hash){var self=this,str=nil,sources=nil,names=nil,mappings=nil;return str=hash["$[]"]("mappings"),sources=hash["$[]"]("sources"),names=hash["$[]"]("names"),mappings=self.$decode_vlq_mappings(str,sources,names),self.$new(mappings,hash["$[]"]("file"))},TMP_Map_from_hash_2.$$arity=1),Opal.defs(self,"$decode_vlq_mappings",TMP_Map_decode_vlq_mappings_5=function(str,sources,names){var TMP_3,self=this,mappings=nil,source_id=nil,original_line=nil,original_column=nil,name_id=nil;return null==sources&&(sources=[]),null==names&&(names=[]),mappings=[],source_id=0,original_line=1,original_column=0,name_id=0,$send(Opal.const_get_relative($nesting,"VLQ").$decode_mappings(str),"each_with_index",[],(TMP_3=function(group,index){var TMP_4,self=TMP_3.$$s||this,generated_column=nil,generated_line=nil;return null==group&&(group=nil),null==index&&(index=nil),generated_column=0,generated_line=$rb_plus(index,1),$send(group,"each",[],(TMP_4=function(segment){var generated=(TMP_4.$$s||this,nil),source=nil,original=nil,name=nil;return null==segment&&(segment=nil),generated_column=$rb_plus(generated_column,segment["$[]"](0)),generated=Opal.const_get_relative($nesting,"Offset").$new(generated_line,generated_column),$truthy($rb_ge(segment.$size(),4))?(source_id=$rb_plus(source_id,segment["$[]"](1)),original_line=$rb_plus(original_line,segment["$[]"](2)),original_column=$rb_plus(original_column,segment["$[]"](3)),source=sources["$[]"](source_id),original=Opal.const_get_relative($nesting,"Offset").$new(original_line,original_column),$truthy(segment["$[]"](4))&&(name_id=$rb_plus(name_id,segment["$[]"](4)),name=names["$[]"](name_id)),mappings["$<<"](Opal.const_get_relative($nesting,"Mapping").$new(source,generated,original,name))):nil},TMP_4.$$s=self,TMP_4.$$arity=1,TMP_4))},TMP_3.$$s=self,TMP_3.$$arity=2,TMP_3)),mappings},TMP_Map_decode_vlq_mappings_5.$$arity=-2),Opal.defn(self,"$initialize",TMP_Map_initialize_6=function(mappings,filename){var $a,self=this;return null==mappings&&(mappings=[]),null==filename&&(filename=nil),$a=[mappings,filename],self.mappings=$a[0],self.filename=$a[1],$a},TMP_Map_initialize_6.$$arity=-1),self.$attr_reader("filename"),Opal.defn(self,"$size",TMP_Map_size_7=function(){var self=this;return self.mappings.$size()},TMP_Map_size_7.$$arity=0),Opal.defn(self,"$[]",TMP_Map_$$_8=function(i){var self=this;return self.mappings["$[]"](i)},TMP_Map_$$_8.$$arity=1),Opal.defn(self,"$each",TMP_Map_each_9=function(){var self=this,$iter=TMP_Map_each_9.$$p,block=$iter||nil;return $iter&&(TMP_Map_each_9.$$p=null),$send(self.mappings,"each",[],block.$to_proc())},TMP_Map_each_9.$$arity=0),Opal.defn(self,"$to_s",TMP_Map_to_s_10=function(){var $a,self=this;return self.string=$truthy($a=self.string)?$a:self.$build_vlq_string()},TMP_Map_to_s_10.$$arity=0),Opal.defn(self,"$sources",TMP_Map_sources_11=function(){var $a,self=this;return self.sources=$truthy($a=self.sources)?$a:$send(self.mappings,"map",[],"source".$to_proc()).$uniq().$compact()},TMP_Map_sources_11.$$arity=0),Opal.defn(self,"$names",TMP_Map_names_12=function(){var $a,self=this;return self.names=$truthy($a=self.names)?$a:$send(self.mappings,"map",[],"name".$to_proc()).$uniq().$compact()},TMP_Map_names_12.$$arity=0),Opal.defn(self,"$==",TMP_Map_$eq$eq_13=function(other){var self=this;return self["$eql?"](other)},TMP_Map_$eq$eq_13.$$arity=1),Opal.defn(self,"$eql?",TMP_Map_eql$q_14=function(other){var $a,$b,self=this;return $truthy($a=$truthy($b=other["$is_a?"](self.$class()))?self.$mappings()["$=="](other.$mappings()):$b)?self.$filename()["$=="](other.$filename()):$a},TMP_Map_eql$q_14.$$arity=1),Opal.defn(self,"$+",TMP_Map_$_16=function(other){var TMP_15,self=this,mappings=nil,offset=nil;return mappings=self.mappings.$dup(),offset=function(){return $truthy(self.mappings["$any?"]())?$rb_plus(self.mappings.$last().$generated().$line(),1):0}(),$send(other,"each",[],(TMP_15=function(m){TMP_15.$$s||this;return null==m&&(m=nil),mappings["$<<"](Opal.const_get_relative($nesting,"Mapping").$new(m.$source(),$rb_plus(m.$generated(),offset),m.$original(),m.$name()))},TMP_15.$$s=self,TMP_15.$$arity=1,TMP_15)),self.$class().$new(mappings,other.$filename())},TMP_Map_$_16.$$arity=1),Opal.defn(self,"$|",TMP_Map_$_18=function(other){var TMP_17,self=this,mappings=nil;return $truthy(self.$mappings()["$empty?"]())?other.$dup():(mappings=[],$send(other,"each",[],(TMP_17=function(m){var self=TMP_17.$$s||this,om=nil;return null==m&&(m=nil),om=self.$bsearch(m.$original()),$truthy(om)?mappings["$<<"](Opal.const_get_relative($nesting,"Mapping").$new(om.$source(),m.$generated(),om.$original(),om.$name())):nil},TMP_17.$$s=self,TMP_17.$$arity=1,TMP_17)),self.$class().$new(mappings,other.$filename()))},TMP_Map_$_18.$$arity=1),Opal.defn(self,"$bsearch",TMP_Map_bsearch_19=function(offset,from,to){var self=this,mid=nil;return null==from&&(from=0),null==to&&(to=$rb_minus(self.$size(),1)),mid=$rb_divide($rb_plus(from,to),2),$truthy($rb_gt(from,to))?function(){return $truthy($rb_lt(from,1))?nil:self["$[]"]($rb_minus(from,1))}():offset["$=="](self["$[]"](mid).$generated())?self["$[]"](mid):$truthy($rb_lt(offset,self["$[]"](mid).$generated()))?self.$bsearch(offset,from,$rb_minus(mid,1)):$truthy($rb_gt(offset,self["$[]"](mid).$generated()))?self.$bsearch(offset,$rb_plus(mid,1),to):nil},TMP_Map_bsearch_19.$$arity=-2),Opal.defn(self,"$as_json",TMP_Map_as_json_20=function(){var self=this;return $hash2(["version","file","mappings","sources","names"],{version:3,file:self.$filename(),mappings:self.$to_s(),sources:self.$sources(),names:self.$names()})},TMP_Map_as_json_20.$$arity=0),Opal.defn(self,"$inspect",TMP_Map_inspect_21=function(){var self=this,str=nil;return str="#<"+self.$class(),$truthy(self.$filename())&&str["$<<"](" filename="+self.$filename().$inspect()),$truthy(self.$mappings()["$any?"]())&&str["$<<"](" mappings="+$send(self.$mappings(),"map",[],"to_s".$to_proc()).$inspect()),str["$<<"](">"),str},TMP_Map_inspect_21.$$arity=0),self.$protected(),self.$attr_reader("mappings"),Opal.defn(self,"$build_vlq_string",TMP_Map_build_vlq_string_25=function(){var TMP_22,$a,TMP_23,self=this,source_id=nil,source_line=nil,source_column=nil,name_id=nil,by_lines=nil,sources_index=nil,names_index=nil,ary=nil;return source_id=0,source_line=1,source_column=0,name_id=0,by_lines=$send(self.mappings,"group_by",[],(TMP_22=function(m){TMP_22.$$s||this;return null==m&&(m=nil),m.$generated().$line()},TMP_22.$$s=self,TMP_22.$$arity=1,TMP_22)),sources_index=Opal.const_get_relative($nesting,"Hash")["$[]"](self.$sources().$each_with_index().$to_a()),names_index=Opal.const_get_relative($nesting,"Hash")["$[]"](self.$names().$each_with_index().$to_a()),ary=$send(Opal.Range.$new(1,$truthy($a=by_lines.$keys().$max())?$a:1,!1),"map",[],(TMP_23=function(line){var $b,TMP_24,self=TMP_23.$$s||this,generated_column=nil;return null==line&&(line=nil),generated_column=0,$send($truthy($b=by_lines["$[]"](line))?$b:[],"map",[],(TMP_24=function(mapping){var group=(TMP_24.$$s||this,nil);return null==mapping&&(mapping=nil),group=[],group["$<<"]($rb_minus(mapping.$generated().$column(),generated_column)),group["$<<"]($rb_minus(sources_index["$[]"](mapping.$source()),source_id)),group["$<<"]($rb_minus(mapping.$original().$line(),source_line)),group["$<<"]($rb_minus(mapping.$original().$column(),source_column)),$truthy(mapping.$name())&&group["$<<"]($rb_minus(names_index["$[]"](mapping.$name()),name_id)),generated_column=mapping.$generated().$column(),source_id=sources_index["$[]"](mapping.$source()),source_line=mapping.$original().$line(),source_column=mapping.$original().$column(),$truthy(mapping.$name())&&(name_id=names_index["$[]"](mapping.$name())),group},TMP_24.$$s=self,TMP_24.$$arity=1,TMP_24))},TMP_23.$$s=self,TMP_23.$$arity=1,TMP_23)),Opal.const_get_relative($nesting,"VLQ").$encode_mappings(ary)},TMP_Map_build_vlq_string_25.$$arity=0),nil&&"build_vlq_string"}($nesting[0],null,$nesting)}($nesting[0],$nesting)},Opal.modules["source_map/version"]=function(Opal){var $nesting=(Opal.top,[]),$module=(Opal.nil,Opal.breaker,Opal.slice,Opal.module);return function($base,$parent_nesting){var $SourceMap,self=$SourceMap=$module($base,"SourceMap"),$nesting=(self.$$proto,[self].concat($parent_nesting));Opal.const_set($nesting[0],"VERSION","0.0.2")}($nesting[0],$nesting)},Opal.modules.source_map=function(Opal){{var self=Opal.top;Opal.nil,Opal.breaker,Opal.slice}return Opal.add_stubs(["$require"]),self.$require("source_map/map"),self.$require("source_map/mapping"),self.$require("source_map/offset"),self.$require("source_map/version"),self.$require("source_map/vlq")},Opal.modules["opal/source_map"]=function(Opal){function $rb_plus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs+rhs:lhs["$+"](rhs)}function $rb_gt(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs>rhs:lhs["$>"](rhs)}function $rb_minus(lhs,rhs){return"number"==typeof lhs&&"number"==typeof rhs?lhs-rhs:lhs["$-"](rhs)}var self=Opal.top,$nesting=[],nil=Opal.nil,$module=(Opal.breaker,Opal.slice,Opal.module),$klass=Opal.klass,$truthy=Opal.truthy,$send=Opal.send;return Opal.add_stubs(["$require","$attr_reader","$+","$file","$map","$line","$column","$code","$new","$source_map_name","$count","$>","$-","$size","$rindex","$any?","$compact","$as_json","$to_s"]),self.$require("source_map"),function($base,$parent_nesting){var $Opal,self=$Opal=$module($base,"Opal"),$nesting=(self.$$proto,[self].concat($parent_nesting));!function($base,$super,$parent_nesting){function $SourceMap(){}{var TMP_SourceMap_initialize_1,TMP_SourceMap_map_3,TMP_SourceMap_as_json_4,TMP_SourceMap_to_json_5,TMP_SourceMap_to_s_6,TMP_SourceMap_magic_comment_7,self=$SourceMap=$klass($base,$super,"SourceMap",$SourceMap),def=self.$$proto;[self].concat($parent_nesting)}return def.map=def.fragments=nil,self.$attr_reader("fragments"),self.$attr_reader("file"),Opal.defn(self,"$initialize",TMP_SourceMap_initialize_1=function(fragments,file){var self=this;return self.fragments=fragments,self.file=file},TMP_SourceMap_initialize_1.$$arity=2),Opal.defn(self,"$map",TMP_SourceMap_map_3=function(){var $a,$b,TMP_2,self=this,source_file=nil,generated_line=nil,generated_column=nil,mappings=nil,zero_offset=nil;return self.map=$truthy($a=self.map)?$a:(source_file=$rb_plus(self.$file(),".rb"),$b=[1,0],generated_line=$b[0],generated_column=$b[1],mappings=$send(self.fragments,"map",[],(TMP_2=function(fragment){var $c,mapping=(TMP_2.$$s||this,nil),source_line=nil,source_column=nil,source_code=nil,source_offset=nil,generated_offset=nil,new_lines=nil;return null==fragment&&(fragment=nil),mapping=nil,source_line=fragment.$line(),source_column=fragment.$column(),source_code=fragment.$code(),$truthy($truthy($c=source_line)?source_column:$c)&&(source_offset=Opal.const_get_qualified(Opal.const_get_qualified("::","SourceMap"),"Offset").$new(source_line,source_column),generated_offset=Opal.const_get_qualified(Opal.const_get_qualified("::","SourceMap"),"Offset").$new(generated_line,generated_column),mapping=Opal.const_get_qualified(Opal.const_get_qualified("::","SourceMap"),"Mapping").$new(source_file,generated_offset,source_offset,fragment.$source_map_name())),new_lines=source_code.$count("\n"),generated_line=$rb_plus(generated_line,new_lines),generated_column=$truthy($rb_gt(new_lines,0))?$rb_minus(source_code.$size(),$rb_plus(source_code.$rindex("\n"),1)):$rb_plus(generated_column,source_code.$size()),mapping
},TMP_2.$$s=self,TMP_2.$$arity=1,TMP_2)),function(){return $truthy(mappings["$any?"]())?nil:(zero_offset=Opal.const_get_qualified(Opal.const_get_qualified("::","SourceMap"),"Offset").$new(0,0),mappings=[Opal.const_get_qualified(Opal.const_get_qualified("::","SourceMap"),"Mapping").$new(source_file,zero_offset,zero_offset)])}(),Opal.const_get_qualified(Opal.const_get_qualified("::","SourceMap"),"Map").$new(mappings.$compact()))},TMP_SourceMap_map_3.$$arity=0),Opal.defn(self,"$as_json",TMP_SourceMap_as_json_4=function(){var self=this;return self.$map().$as_json()},TMP_SourceMap_as_json_4.$$arity=0),Opal.defn(self,"$to_json",TMP_SourceMap_to_json_5=function(){var self=this;return self.$map().$as_json()},TMP_SourceMap_to_json_5.$$arity=0),Opal.defn(self,"$to_s",TMP_SourceMap_to_s_6=function(){var self=this;return self.$map().$to_s()},TMP_SourceMap_to_s_6.$$arity=0),Opal.defn(self,"$magic_comment",TMP_SourceMap_magic_comment_7=function(map_path){return"\n//# sourceMappingURL=file://"+map_path},TMP_SourceMap_magic_comment_7.$$arity=1),nil&&"magic_comment"}($nesting[0],null,$nesting)}($nesting[0],$nesting)},Opal.modules["opal-source-maps"]=function(Opal){{var self=Opal.top;Opal.nil,Opal.breaker,Opal.slice}return Opal.add_stubs(["$require"]),self.$require("source_map"),self.$require("opal/source_map")};